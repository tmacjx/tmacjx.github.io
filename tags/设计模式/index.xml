<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>设计模式 on tmacKan - A record for Life</title><link>http://localhost:1313/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>Recent content in 设计模式 on tmacKan - A record for Life</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>tmackan</copyright><lastBuildDate>Fri, 28 Aug 2020 15:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>Reactor模式Scaling I/O密集应用</title><link>http://localhost:1313/post/2020-08-29/</link><pubDate>Fri, 28 Aug 2020 15:00:00 +0000</pubDate><guid>http://localhost:1313/post/2020-08-29/</guid><description>设计实现一个I/O密集型的聊天室应用 1.单线程/多线程? 单进程/多进程? 2.阻塞io/非阻塞io/多路复用？ First solution: a thread per connection using Blocking I/O 多线程阻塞I/</description></item></channel></rss>